{"version":3,"sources":["webpack:///static/chrome/eventPage.js","webpack:///./src/plugins/explaain-search.js","webpack:///./src/chrome/event-page.js"],"names":["webpackJsonp","0","module","exports","Huz3","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1_loglevel__","__WEBPACK_IMPORTED_MODULE_1_loglevel___default","__WEBPACK_IMPORTED_MODULE_2_q__","__WEBPACK_IMPORTED_MODULE_2_q___default","__WEBPACK_IMPORTED_MODULE_3_algoliasearch__","__WEBPACK_IMPORTED_MODULE_3_algoliasearch___default","a","setLevel","escapeRegExp","str","replace","Search","install","Vue","options","trace","AlgoliaClient","appID","apiKey","protocol","AlgoliaIndex","initIndex","index","advancedSearch","params","d","defer","clearCache","search","e","content","reject","fetchListItemCards","hits","then","resolve","promise","searchCards","user","searchText","hitsPerPage","query","filters","data","teams","map","team","join","catch","cards","promises","forEach","card","correctCard","listCards","listItems","key","push","getCard","allSettled","results","objectID","getObject","description","sentence","text","console","log","compoundSearch","userID","searchTextArray","Math","min","max","ceil","length","i","substring","t","j","res","concat","apply","r","value","removeDuplicates","originalArray","objKey","trimmedArray","values","indexOf","getPageResults","pageData","allUserCards","pageResults","reminders","pings","memories","phrase","pageText","boringWords","allWords","score","context","entity","val","String","toLowerCase","reg","RegExp","points","match","debug","filter","urlRoot","baseUrl","info","triggerURL","ping","highlight","error","this","aG/X","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default","__WEBPACK_IMPORTED_MODULE_1_vue__","__WEBPACK_IMPORTED_MODULE_2_loglevel__","__WEBPACK_IMPORTED_MODULE_2_loglevel___default","__WEBPACK_IMPORTED_MODULE_3_q__","__WEBPACK_IMPORTED_MODULE_3_q___default","__WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__","UserIDs","live","Jeremy","Matt","Carol","Harriet","Jonny","staging","local","drive","ACME","UserID","PageResults","UserCards","LastRefresh","algoliaParams","use","chrome","browserAction","onClicked","addListener","tab","tabs","active","currentWindow","sendMessage","id","action","runtime","onMessage","request","sender","sendResponse","url","getCurrentPageResults","checkRefresh","addToPageResults","getAllUserCards","event","response","tabID","getCurrentTab","getPageData","sendMessageToTab","pageTabID","Date"],"mappings":"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","file":"static/chrome/eventPage.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"Huz3\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_loglevel__ = __webpack_require__(\"BvyM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_loglevel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_loglevel__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_q__ = __webpack_require__(\"/Luh\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_q___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_q__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_algoliasearch__ = __webpack_require__(\"6gPI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_algoliasearch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_algoliasearch__);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.setLevel('debug');\n\nvar escapeRegExp = function escapeRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&'); // str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\n};\n\nvar Search = {\n  install: function install(Vue, options) {\n    __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(options);\n    var AlgoliaClient = __WEBPACK_IMPORTED_MODULE_3_algoliasearch___default()(options.appID, options.apiKey, {\n      protocol: 'https:'\n    });\n    var AlgoliaIndex = AlgoliaClient.initIndex(options.index);\n\n    var advancedSearch = function advancedSearch(params) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      AlgoliaIndex.clearCache();\n      AlgoliaIndex.search(params, function (e, content) {\n        if (e) {\n          __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(e);\n          d.reject(e);\n        } else {\n          fetchListItemCards(content.hits).then(function () {\n            d.resolve(content.hits);\n          });\n        }\n      });\n      return d.promise;\n    };\n\n    var searchCards = function searchCards(user, searchText, hitsPerPage) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      var params = {\n        query: searchText,\n        filters: 'teams: \"' + user.data.teams.map(function (team) {\n          return team.team;\n        }).join('\" OR teams: \"') + '\"',\n        hitsPerPage: hitsPerPage || null\n      };\n      __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(params);\n      advancedSearch(params).then(function (hits) {\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(hits);\n        d.resolve(hits);\n      }).catch(function (e) {\n        d.reject(e);\n      });\n      return d.promise;\n    };\n\n    var fetchListItemCards = function fetchListItemCards(cards) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      var promises = [];\n      cards.forEach(function (card) {\n        card = correctCard(card);\n        card.content.listCards = [];\n        if (!card.content.listItems) card.content.listItems = [];\n        card.content.listItems.forEach(function (key) {\n          // const p = Q.defer()\n          promises.push(getCard(key)); // Do we need to notify the card or provide callbacks etc here?\n          // promises.push(p.promise)\n        });\n      });\n      __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(promises);\n      __WEBPACK_IMPORTED_MODULE_2_q___default.a.allSettled(promises).then(function (results) {\n        d.resolve(results);\n      }).catch(function (e) {\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(e);\n        d.reject(e);\n      });\n      return d.promise;\n    };\n\n    var getCard = function getCard(objectID) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      AlgoliaIndex.getObject(objectID, function (e, content) {\n        if (e) {\n          __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(e);\n          d.reject(e);\n        } else {\n          d.resolve(content);\n        }\n      });\n      return d.promise;\n    };\n\n    var correctCard = function correctCard(card) {\n      if (!card.content) card.content = {\n        description: card.description || card.sentence || card.text,\n        listItems: card.listItems || []\n      };\n      console.log(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(card.content));\n      if (card.sentence) delete card.sentence;\n      if (card.text) delete card.text;\n      if (card.description) delete card.description;\n      return card;\n    };\n\n    var compoundSearch = function compoundSearch(userID, searchText) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      var maxLength = 400;\n      var searchTextArray = [];\n      var hitsPerPage = Math.min(Math.max(Math.ceil(10 / (searchText.length / maxLength)), 3), 12);\n      for (var i = 0; i < searchText.length; i += maxLength) {\n        searchTextArray.push(searchText.substring(i, i + maxLength));\n      }var promises = searchTextArray.map(function (t, j) {\n        return searchCards(userID, t, hitsPerPage);\n      });\n      __WEBPACK_IMPORTED_MODULE_2_q___default.a.allSettled(promises).then(function (res) {\n        var results = [].concat.apply([], res.map(function (r) {\n          return r.value;\n        }));\n        results = removeDuplicates(results, 'objectID');\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(results);\n        d.resolve(results);\n      }).catch(function (e) {\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(e);\n      });\n      return d.promise;\n    };\n\n    var removeDuplicates = function removeDuplicates(originalArray, objKey) {\n      var trimmedArray = [];\n      var values = [];\n      var value;\n      for (var i = 0; i < originalArray.length; i++) {\n        value = originalArray[i][objKey];\n        if (values.indexOf(value) === -1) {\n          trimmedArray.push(originalArray[i]);\n          values.push(value);\n        }\n      }\n      return trimmedArray;\n    };\n\n    // const checkPageHit = function(pageData, results) {\n    //   //Not yet accounting for capitals\n    //   const boringWords = [\n    //     'favourite',\n    //     'world',\n    //     'name',\n    //     'this',\n    //     'plan',\n    //     'need',\n    //     'best',\n    //     'like',\n    //     'the',\n    //     'are',\n    //     'is',\n    //     'my',\n    //     'my',\n    //   ]\n    //   const hits = []\n    //   results.forEach(function(result, i) {\n    //     log.trace('---')\n    //     log.trace(i)\n    //     var count = []\n    //     result.context.forEach(function(c) {\n    //       if (pageData.pageText.indexOf(c.value) > -1\n    //       && hits.indexOf(result.objectID) == -1\n    //       && c.value && c.value.length > 3\n    //       && boringWords.indexOf(c.value) == -1\n    //       && count.indexOf(c.value) == -1) {\n    //         log.trace(c.value)\n    //         count.push(c.value)\n    //         (c.value.match(/ /g) || []).forEach(function() {\n    //           count.push(c.value)\n    //         })\n    //       }\n    //     })\n    //     if (count.length > 2) {\n    //       log.trace(result.sentence)\n    //       hits.push(result)\n    //     }\n    //     log.trace('---')\n    //   })\n    //\n    //   // return hits\n    //   //Force no hits\n    //   return []\n    // }\n\n    // const checkPageReminder = function(userID, pageData) {\n    //   const d = Q.defer()\n    //   log.trace(pageData)\n    //   const urlRoot = pageData.baseUrl.replace('.com','').replace('.co.uk','').replace('.org','')\n    //   const params = {\n    //     query: '',\n    //     filters: 'userID: ' + userID + ' AND (triggerUrl: ' + urlRoot + ' OR triggerUrl: ' + urlRoot + '.com OR triggerUrl: ' + urlRoot + '.co.uk OR triggerUrl: ' + urlRoot + '.org OR triggerURL: ' + urlRoot + ' OR triggerURL: ' + urlRoot + '.com OR triggerURL: ' + urlRoot + '.co.uk OR triggerURL: ' + urlRoot + '.org)'\n    //   }\n    //   log.trace('params')\n    //   log.trace(params)\n    //   advancedSearch(params)\n    //   .then(function(reminders) {\n    //     log.trace('reminders')\n    //     log.trace(reminders)\n    //     d.resolve(reminders)\n    //   }).catch(function(e) {\n    //     d.reject(e)\n    //   })\n    //   return d.promise\n    // }\n\n    var getPageResults = function getPageResults(userID, pageData, allUserCards) {\n      var d = __WEBPACK_IMPORTED_MODULE_2_q___default.a.defer();\n      // Gets all results\n      var pageResults = {\n        hits: [],\n        reminders: [],\n        pings: [],\n        memories: []\n      };\n      __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.trace(userID, pageData);\n      var gmailBoringPhrases = ['Skip to content', 'Using', 'with screen readers', 'Search', 'Mail', 'COMPOSE', 'Labels', 'Inbox', 'Starred', 'Sent Mail', 'Drafts', 'More', '---------- Forwarded message ----------', 'From: ', 'Date: ', 'Subject: ', 'To: ', 'Click here to Reply or Forward', 'GB', 'GB used', 'Manage', 'Program Policies', 'Powered by Google', 'Last account activity:', 'hour ago', 'hours ago', 'Details'];\n      gmailBoringPhrases.forEach(function (phrase) {\n        pageData.pageText = pageData.pageText.replace(phrase, '');\n      });\n      var boringWords = ['i', 'a', 'of', 'me', 'my', 'is', 'im', 'so', 'all', 'get', 'how', 'new', 'out', 'the', 'use', 'best', 'name', 'next', 'take', 'what', 'image', 'something'];\n\n      try {\n        var allWords = [];\n        allUserCards.forEach(function (card) {\n          var score = 0;\n          card.context.forEach(function (entity) {\n            var val = String(entity.value);\n            if (boringWords.indexOf(val.toLowerCase()) === -1 && val.length > 1) {\n              var reg = new RegExp(escapeRegExp(val), 'gi');\n              var points = (pageData.pageText.match(reg) || []).length * val.length;\n              score += points;\n              if (points && allWords.indexOf(val) === -1) allWords.push(val);\n            }\n          });\n          if (score > 100) pageResults.hits.push(card);else if (score > 0) pageResults.memories.push(card);\n        });\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.debug(allWords);\n\n        pageResults.reminders = allUserCards.filter(function (card) {\n          var urlRoot = pageData.baseUrl.replace('.com', '').replace('.co.uk', '').replace('.org', '');\n          __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.info(card.triggerURL);\n          return card.triggerURL && (card.triggerURL.indexOf(urlRoot) > -1 || card.triggerURL.indexOf(urlRoot) > -1);\n        });\n        pageResults.pings = pageResults.reminders; // .concat(pageResults.hits)\n        pageResults.pings.forEach(function (ping) {\n          ping.highlight = true;\n        });\n        // pageResults.memories = pageResults.pings.concat(pageResults.memories)\n        pageResults.memories = removeDuplicates(pageResults.memories, 'objectID');\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.debug(pageResults);\n        d.resolve(pageResults);\n      } catch (e) {\n        __WEBPACK_IMPORTED_MODULE_1_loglevel___default.a.error(e);\n      }\n\n      // compoundSearch(userID, pageData.pageText)\n      // .then(function(results) {\n      //   log.trace(1)\n      //   log.trace(results)\n      //   pageResults.memories = results\n      //   // Checks whether a ping is required\n      //   pageResults.hits = checkPageHit(pageData, results)\n      //   log.trace(2)\n      //   log.trace(pageResults.hits)\n      //   return checkPageReminder(userID, pageData)\n      // }).then(function(reminders) {\n      //   pageResults.reminders = reminders\n      //   log.trace(3)\n      //   log.trace(pageResults.reminders)\n      //   // Returns results plus ping\n      //   pageResults.pings = pageResults.reminders.concat(pageResults.hits)\n      //   pageResults.pings.forEach(function(ping) {\n      //     log.trace(ping.objectID)\n      //     ping.highlight = true\n      //   })\n      //   pageResults.memories = pageResults.pings.concat(pageResults.memories)\n      //   pageResults.memories = removeDuplicates(pageResults.memories, 'objectID')\n      //   log.trace(pageResults)\n      //   d.resolve(pageResults)\n      // }).catch(function(e) {\n      //   log.trace(e)\n      //   d.reject(e)\n      // })\n      return d.promise;\n    };\n\n    this.advancedSearch = advancedSearch;\n    this.searchCards = searchCards;\n    this.compoundSearch = compoundSearch;\n    this.getPageResults = getPageResults;\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Search);\n\n/***/ }),\n\n/***/ \"aG/X\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(\"fZjL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(\"/5sW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_loglevel__ = __webpack_require__(\"BvyM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_loglevel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_loglevel__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_q__ = __webpack_require__(\"/Luh\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_q___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_q__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__ = __webpack_require__(\"Huz3\");\n\n/* global chrome */\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.setLevel('debug');\n\nvar UserIDs = {\n  live: {\n    Jeremy: '1627888800569309',\n    Matt: '1455707247850069',\n    Carol: '1459068990878077',\n    Harriet: '1478776232161468',\n    Jonny: '1513554438729753'\n  },\n  staging: {\n    Jeremy: '1366746370089527',\n    Matt: '1528134990563202'\n  },\n  local: {\n    Jeremy: '1300120880110773',\n    Matt: '1428419100528438'\n  },\n  drive: {\n    Jeremy: '104380110279658920175',\n    ACME: '101118387301286232222'\n  }\n};\n\nvar UserID = UserIDs.live.ACME;\nvar PageResults = {};\nvar UserCards = [];\nvar LastRefresh = 0;\n\nvar algoliaParams = { // Need to send these to app.vue to avoid duplication!\n  appID: 'I2VKMNNAXI',\n  apiKey: '2b8406f84cd4cc507da173032c46ee7b',\n  index: 'ForgetMeNot_Context_Test'\n};\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__[\"a\" /* default */], algoliaParams);\n\nchrome.browserAction.onClicked.addListener(function (tab) {\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    chrome.tabs.sendMessage(tabs[0].id, { action: 'toggleDrawer' }, function (res) {\n      __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.info(res);\n    });\n  });\n});\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n  try {\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(sender.tab ? 'From a content script: ' + sender.tab.url : 'From the extension', request);\n\n    if (request.action === 'getPageResults') {\n      getCurrentPageResults(request.data).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(res);\n        sendResponse(res);\n      });\n      return true;\n    }\n    if (request.action === 'checkPage') {\n      __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.trace(request.data);\n      checkRefresh().then(function () {\n        return __WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__[\"a\" /* default */].getPageResults(UserID, request.data, UserCards);\n      }).then(function (res) {\n        addToPageResults(sender.tab.id, res);\n        PageResults = res;\n        sendResponse(res);\n      }).catch(function (e) {\n        __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.error(e);\n      });\n      return true;\n    }\n    if (request.action === 'getUser') {\n      console.log(UserID);\n      sendResponse(UserID);\n      return true;\n    }\n    if (request.action === 'refreshCards') {\n      getAllUserCards();\n      return true;\n    }\n    if (request.event === 'popupOpened') {\n      chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, { event: 'popupOpened' }, function (response) {});\n      });\n      return true;\n    }\n  } catch (e) {\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.error(e);\n  }\n});\n\nvar getCurrentPageResults = function getCurrentPageResults(data) {\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  var tabID;\n  __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(1);\n  checkRefresh().then(getCurrentTab).then(function (tab) {\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(tab.id);\n    tabID = tab.id;\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(PageResults);\n    if (PageResults[tabID]) {\n      d.resolve(PageResults[tabID]);\n    } else {\n      if (!data) data = { tabID: tabID };\n      __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(data);\n      getPageData(data).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(res);\n        return __WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__[\"a\" /* default */].getPageResults(UserID, res, UserCards);\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(res);\n        addToPageResults(tabID, res);\n        d.resolve(res);\n      }).catch(function (e) {\n        d.reject(e);\n      });\n    }\n  }).catch(function (e) {\n    d.reject(e);\n  });\n  return d.promise;\n};\n\nvar getCurrentTab = function getCurrentTab() {\n  // Need error catching here\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    d.resolve(tabs[0]);\n  });\n  return d.promise;\n};\n\nvar getPageData = function getPageData(data) {\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  if (data.pageData) {\n    d.resolve(data.pageData);\n  } else if (data.tabID) {\n    sendMessageToTab(data.tabID, { action: 'getPageData' }) // Just fixed bug here, so maybe this shouldn't actually be working now..!\n    .then(function (res) {\n      d.resolve(res);\n    });\n  } else {\n    d.reject();\n  }\n  return d.promise;\n};\n\nvar sendMessageToTab = function sendMessageToTab(tabID, data) {\n  // Need error catching here\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  chrome.tabs.sendMessage(tabID, data, function (res) {\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(res);\n    d.resolve(res);\n  });\n  return d.promise;\n};\n\nvar addToPageResults = function addToPageResults(tabID, data) {\n  PageResults[tabID] = data;\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(PageResults).forEach(function (pageTabID) {\n      if (tabs.filter(function (tab) {\n        return tab.id === pageTabID;\n      }).length === 0) delete PageResults[pageTabID];\n    });\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(PageResults);\n  });\n};\n\nvar checkRefresh = function checkRefresh() {\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  var now = new Date();\n  if (now - LastRefresh > 300000) {\n    getAllUserCards().then(function () {\n      d.resolve();\n    }).catch(function (e) {\n      __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.error(e);\n      d.reject(e);\n    });\n  } else {\n    d.resolve();\n  }\n  return d.promise;\n};\n\nvar getAllUserCards = function getAllUserCards() {\n  var d = __WEBPACK_IMPORTED_MODULE_3_q___default.a.defer();\n  LastRefresh = new Date();\n  __WEBPACK_IMPORTED_MODULE_4__plugins_explaain_search_js__[\"a\" /* default */].searchCards(UserID, '', 1000).then(function (results) {\n    UserCards = results;\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.debug(UserCards);\n    d.resolve();\n  }).catch(function (e) {\n    __WEBPACK_IMPORTED_MODULE_2_loglevel___default.a.error(e);\n    d.reject(e);\n  });\n  return d.promise;\n};\ngetAllUserCards();\n\n/***/ })\n\n},[\"aG/X\"]);\n\n\n// WEBPACK FOOTER //\n// static/chrome/eventPage.js","import log from 'loglevel'\nimport Q from 'q'\nimport Algolia from 'algoliasearch'\n\nlog.setLevel('debug')\n\nconst escapeRegExp = function(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') // str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\n}\n\nconst Search = {\n  install(Vue, options) {\n    log.trace(options)\n    const AlgoliaClient = Algolia(options.appID, options.apiKey, {\n      protocol: 'https:'\n    })\n    const AlgoliaIndex = AlgoliaClient.initIndex(options.index)\n\n    const advancedSearch = function(params) {\n      const d = Q.defer()\n      AlgoliaIndex.clearCache()\n      AlgoliaIndex.search(params, function(e, content) {\n        if (e) {\n          log.trace(e)\n          d.reject(e)\n        } else {\n          fetchListItemCards(content.hits)\n          .then(function() {\n            d.resolve(content.hits)\n          })\n        }\n      })\n      return d.promise\n    }\n\n    const searchCards = function(user, searchText, hitsPerPage) {\n      const d = Q.defer()\n      const params = {\n        query: searchText,\n        filters: 'teams: \"' + user.data.teams.map(team => { return team.team }).join('\" OR teams: \"') + '\"',\n        hitsPerPage: hitsPerPage || null\n      }\n      log.trace(params)\n      advancedSearch(params)\n      .then(function(hits) {\n        log.trace(hits)\n        d.resolve(hits)\n      }).catch(function(e) {\n        d.reject(e)\n      })\n      return d.promise\n    }\n\n    const fetchListItemCards = function(cards) {\n      const d = Q.defer()\n      const promises = []\n      cards.forEach(function(card) {\n        card = correctCard(card)\n        card.content.listCards = []\n        if (!card.content.listItems) card.content.listItems = []\n        card.content.listItems.forEach(function(key) {\n          // const p = Q.defer()\n          promises.push(getCard(key)) // Do we need to notify the card or provide callbacks etc here?\n          // promises.push(p.promise)\n        })\n      })\n      log.trace(promises)\n      Q.allSettled(promises)\n      .then(function(results) {\n        d.resolve(results)\n      }).catch(function(e) {\n        log.trace(e)\n        d.reject(e)\n      })\n      return d.promise\n    }\n\n    const getCard = function(objectID) {\n      const d = Q.defer()\n      AlgoliaIndex.getObject(objectID, function(e, content) {\n        if (e) {\n          log.trace(e)\n          d.reject(e)\n        } else {\n          d.resolve(content)\n        }\n      })\n      return d.promise\n    }\n\n    const correctCard = function(card) {\n      if (!card.content)\n        card.content = {\n          description: card.description || card.sentence || card.text,\n          listItems: card.listItems || [],\n        }\n      console.log(JSON.stringify(card.content))\n      if (card.sentence) delete card.sentence\n      if (card.text) delete card.text\n      if (card.description) delete card.description\n      return card\n    }\n\n    const compoundSearch = function(userID, searchText) {\n      const d = Q.defer()\n      const maxLength = 400\n      const searchTextArray = []\n      const hitsPerPage = Math.min(Math.max(Math.ceil(10 / (searchText.length / maxLength)), 3), 12)\n      for (var i = 0; i < searchText.length; i += maxLength)\n        searchTextArray.push(searchText.substring(i, i + maxLength))\n      const promises = searchTextArray.map(function(t, j) {\n        return searchCards(userID, t, hitsPerPage)\n      })\n      Q.allSettled(promises)\n      .then(function(res) {\n        var results = [].concat.apply([], res.map(function(r) { return r.value }))\n        results = removeDuplicates(results, 'objectID')\n        log.trace(results)\n        d.resolve(results)\n      })\n      .catch(function(e) {\n        log.trace(e)\n      })\n      return d.promise\n    }\n\n    const removeDuplicates = function(originalArray, objKey) {\n      var trimmedArray = []\n      var values = []\n      var value\n      for (var i = 0; i < originalArray.length; i++) {\n        value = originalArray[i][objKey]\n        if (values.indexOf(value) === -1) {\n          trimmedArray.push(originalArray[i])\n          values.push(value)\n        }\n      }\n      return trimmedArray\n    }\n\n    // const checkPageHit = function(pageData, results) {\n    //   //Not yet accounting for capitals\n    //   const boringWords = [\n    //     'favourite',\n    //     'world',\n    //     'name',\n    //     'this',\n    //     'plan',\n    //     'need',\n    //     'best',\n    //     'like',\n    //     'the',\n    //     'are',\n    //     'is',\n    //     'my',\n    //     'my',\n    //   ]\n    //   const hits = []\n    //   results.forEach(function(result, i) {\n    //     log.trace('---')\n    //     log.trace(i)\n    //     var count = []\n    //     result.context.forEach(function(c) {\n    //       if (pageData.pageText.indexOf(c.value) > -1\n    //       && hits.indexOf(result.objectID) == -1\n    //       && c.value && c.value.length > 3\n    //       && boringWords.indexOf(c.value) == -1\n    //       && count.indexOf(c.value) == -1) {\n    //         log.trace(c.value)\n    //         count.push(c.value)\n    //         (c.value.match(/ /g) || []).forEach(function() {\n    //           count.push(c.value)\n    //         })\n    //       }\n    //     })\n    //     if (count.length > 2) {\n    //       log.trace(result.sentence)\n    //       hits.push(result)\n    //     }\n    //     log.trace('---')\n    //   })\n    //\n    //   // return hits\n    //   //Force no hits\n    //   return []\n    // }\n\n    // const checkPageReminder = function(userID, pageData) {\n    //   const d = Q.defer()\n    //   log.trace(pageData)\n    //   const urlRoot = pageData.baseUrl.replace('.com','').replace('.co.uk','').replace('.org','')\n    //   const params = {\n    //     query: '',\n    //     filters: 'userID: ' + userID + ' AND (triggerUrl: ' + urlRoot + ' OR triggerUrl: ' + urlRoot + '.com OR triggerUrl: ' + urlRoot + '.co.uk OR triggerUrl: ' + urlRoot + '.org OR triggerURL: ' + urlRoot + ' OR triggerURL: ' + urlRoot + '.com OR triggerURL: ' + urlRoot + '.co.uk OR triggerURL: ' + urlRoot + '.org)'\n    //   }\n    //   log.trace('params')\n    //   log.trace(params)\n    //   advancedSearch(params)\n    //   .then(function(reminders) {\n    //     log.trace('reminders')\n    //     log.trace(reminders)\n    //     d.resolve(reminders)\n    //   }).catch(function(e) {\n    //     d.reject(e)\n    //   })\n    //   return d.promise\n    // }\n\n    const getPageResults = function(userID, pageData, allUserCards) {\n      const d = Q.defer()\n      // Gets all results\n      const pageResults = {\n        hits: [],\n        reminders: [],\n        pings: [],\n        memories: [],\n      }\n      log.trace(userID, pageData)\n      const gmailBoringPhrases = [\n        'Skip to content',\n        'Using',\n        'with screen readers',\n        'Search',\n        'Mail',\n        'COMPOSE',\n        'Labels',\n        'Inbox',\n        'Starred',\n        'Sent Mail',\n        'Drafts',\n        'More',\n        '---------- Forwarded message ----------',\n        'From: ',\n        'Date: ',\n        'Subject: ',\n        'To: ',\n        'Click here to Reply or Forward',\n        'GB',\n        'GB used',\n        'Manage',\n        'Program Policies',\n        'Powered by Google',\n        'Last account activity:',\n        'hour ago',\n        'hours ago',\n        'Details',\n      ]\n      gmailBoringPhrases.forEach(function(phrase) {\n        pageData.pageText = pageData.pageText.replace(phrase, '')\n      })\n      const boringWords = [\n        'i',\n        'a',\n        'of',\n        'me',\n        'my',\n        'is',\n        'im',\n        'so',\n        'all',\n        'get',\n        'how',\n        'new',\n        'out',\n        'the',\n        'use',\n        'best',\n        'name',\n        'next',\n        'take',\n        'what',\n        'image',\n        'something',\n      ]\n\n      try {\n        const allWords = []\n        allUserCards.forEach(function(card) {\n          var score = 0\n          card.context.forEach(function(entity) {\n            const val = String(entity.value)\n            if (boringWords.indexOf(val.toLowerCase()) === -1 && val.length > 1) {\n              const reg = new RegExp(escapeRegExp(val), 'gi')\n              const points = (pageData.pageText.match(reg) || []).length * val.length\n              score += points\n              if (points && allWords.indexOf(val) === -1) allWords.push(val)\n            }\n          })\n          if (score > 100)\n            pageResults.hits.push(card)\n          else if (score > 0)\n            pageResults.memories.push(card)\n        })\n        log.debug(allWords)\n\n        pageResults.reminders = allUserCards.filter(function(card) {\n          const urlRoot = pageData.baseUrl.replace('.com', '').replace('.co.uk', '').replace('.org', '')\n          log.info(card.triggerURL)\n          return card.triggerURL && (card.triggerURL.indexOf(urlRoot) > -1 || card.triggerURL.indexOf(urlRoot) > -1)\n        })\n        pageResults.pings = pageResults.reminders // .concat(pageResults.hits)\n        pageResults.pings.forEach(function(ping) { ping.highlight = true })\n        // pageResults.memories = pageResults.pings.concat(pageResults.memories)\n        pageResults.memories = removeDuplicates(pageResults.memories, 'objectID')\n        log.debug(pageResults)\n        d.resolve(pageResults)\n      } catch (e) {\n        log.error(e)\n      }\n\n      // compoundSearch(userID, pageData.pageText)\n      // .then(function(results) {\n      //   log.trace(1)\n      //   log.trace(results)\n      //   pageResults.memories = results\n      //   // Checks whether a ping is required\n      //   pageResults.hits = checkPageHit(pageData, results)\n      //   log.trace(2)\n      //   log.trace(pageResults.hits)\n      //   return checkPageReminder(userID, pageData)\n      // }).then(function(reminders) {\n      //   pageResults.reminders = reminders\n      //   log.trace(3)\n      //   log.trace(pageResults.reminders)\n      //   // Returns results plus ping\n      //   pageResults.pings = pageResults.reminders.concat(pageResults.hits)\n      //   pageResults.pings.forEach(function(ping) {\n      //     log.trace(ping.objectID)\n      //     ping.highlight = true\n      //   })\n      //   pageResults.memories = pageResults.pings.concat(pageResults.memories)\n      //   pageResults.memories = removeDuplicates(pageResults.memories, 'objectID')\n      //   log.trace(pageResults)\n      //   d.resolve(pageResults)\n      // }).catch(function(e) {\n      //   log.trace(e)\n      //   d.reject(e)\n      // })\n      return d.promise\n    }\n\n    this.advancedSearch = advancedSearch\n    this.searchCards = searchCards\n    this.compoundSearch = compoundSearch\n    this.getPageResults = getPageResults\n  }\n\n}\n\nexport default Search\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/explaain-search.js","/* global chrome */\nimport Vue from 'vue'\nimport log from 'loglevel'\nimport Q from 'q'\n\nimport ExplaainSearch from '../plugins/explaain-search.js'\n\nlog.setLevel('debug')\n\nconst UserIDs = {\n  live: {\n    Jeremy: '1627888800569309',\n    Matt: '1455707247850069',\n    Carol: '1459068990878077',\n    Harriet: '1478776232161468',\n    Jonny: '1513554438729753',\n  },\n  staging: {\n    Jeremy: '1366746370089527',\n    Matt: '1528134990563202',\n  },\n  local: {\n    Jeremy: '1300120880110773',\n    Matt: '1428419100528438',\n  },\n  drive: {\n    Jeremy: '104380110279658920175',\n    ACME: '101118387301286232222'\n  }\n}\n\nconst UserID = UserIDs.live.ACME\nvar PageResults = {}\nvar UserCards = []\nvar LastRefresh = 0\n\nconst algoliaParams = { // Need to send these to app.vue to avoid duplication!\n  appID: 'I2VKMNNAXI',\n  apiKey: '2b8406f84cd4cc507da173032c46ee7b',\n  index: 'ForgetMeNot_Context_Test'\n}\nVue.use(ExplaainSearch, algoliaParams)\n\nchrome.browserAction.onClicked.addListener(function(tab) {\n  chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n    chrome.tabs.sendMessage(tabs[0].id, {action: 'toggleDrawer'}, function(res) {\n      log.info(res)\n    })\n  })\n})\n\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n  try {\n    log.debug((sender.tab ? 'From a content script: ' + sender.tab.url : 'From the extension'), request)\n\n    if (request.action === 'getPageResults') {\n      getCurrentPageResults(request.data)\n      .then(function(res) {\n        log.debug(res)\n        sendResponse(res)\n      })\n      return true\n    }\n    if (request.action === 'checkPage') {\n      log.trace(request.data)\n      checkRefresh()\n      .then(function() {\n        return ExplaainSearch.getPageResults(UserID, request.data, UserCards)\n      }).then(function(res) {\n        addToPageResults(sender.tab.id, res)\n        PageResults = res\n        sendResponse(res)\n      }).catch(function(e) {\n        log.error(e)\n      })\n      return true\n    }\n    if (request.action === 'getUser') {\n      console.log(UserID)\n      sendResponse(UserID)\n      return true\n    }\n    if (request.action === 'refreshCards') {\n      getAllUserCards()\n      return true\n    }\n    if (request.event === 'popupOpened') {\n      chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n        chrome.tabs.sendMessage(tabs[0].id, {event: 'popupOpened'}, function(response) {})\n      })\n      return true\n    }\n  } catch (e) {\n    log.error(e)\n  }\n})\n\nconst getCurrentPageResults = function(data) {\n  const d = Q.defer()\n  var tabID\n  log.debug(1)\n  checkRefresh()\n  .then(getCurrentTab)\n  .then(function(tab) {\n    log.debug(tab.id)\n    tabID = tab.id\n    log.debug(PageResults)\n    if (PageResults[tabID]) {\n      d.resolve(PageResults[tabID])\n    } else {\n      if (!data) data = {tabID: tabID}\n      log.debug(data)\n      getPageData(data)\n      .then(function(res) {\n        log.debug(res)\n        return ExplaainSearch.getPageResults(UserID, res, UserCards)\n      }).then(function(res) {\n        log.debug(res)\n        addToPageResults(tabID, res)\n        d.resolve(res)\n      }).catch(function(e) {\n        d.reject(e)\n      })\n    }\n  }).catch(function(e) {\n    d.reject(e)\n  })\n  return d.promise\n}\n\nconst getCurrentTab = function() {\n  // Need error catching here\n  const d = Q.defer()\n  chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n    d.resolve(tabs[0])\n  })\n  return d.promise\n}\n\nconst getPageData = function(data) {\n  const d = Q.defer()\n  if (data.pageData) {\n    d.resolve(data.pageData)\n  } else if (data.tabID) {\n    sendMessageToTab(data.tabID, {action: 'getPageData'}) // Just fixed bug here, so maybe this shouldn't actually be working now..!\n    .then(function(res) {\n      d.resolve(res)\n    })\n  } else {\n    d.reject()\n  }\n  return d.promise\n}\n\nconst sendMessageToTab = function(tabID, data) {\n  // Need error catching here\n  const d = Q.defer()\n  chrome.tabs.sendMessage(tabID, data, function(res) {\n    log.debug(res)\n    d.resolve(res)\n  })\n  return d.promise\n}\n\nconst addToPageResults = function(tabID, data) {\n  PageResults[tabID] = data\n  chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n    Object.keys(PageResults).forEach(function(pageTabID) {\n      if (tabs.filter(function(tab) { return tab.id === pageTabID }).length === 0) delete PageResults[pageTabID]\n    })\n    log.debug(PageResults)\n  })\n}\n\nconst checkRefresh = function() {\n  const d = Q.defer()\n  const now = new Date()\n  if (now - LastRefresh > 300000) {\n    getAllUserCards()\n    .then(function() {\n      d.resolve()\n    }).catch(function(e) {\n      log.error(e)\n      d.reject(e)\n    })\n  } else {\n    d.resolve()\n  }\n  return d.promise\n}\n\nconst getAllUserCards = function() {\n  const d = Q.defer()\n  LastRefresh = new Date()\n  ExplaainSearch.searchCards(UserID, '', 1000)\n  .then(function(results) {\n    UserCards = results\n    log.debug(UserCards)\n    d.resolve()\n  }).catch(function(e) {\n    log.error(e)\n    d.reject(e)\n  })\n  return d.promise\n}\ngetAllUserCards()\n\n\n\n// WEBPACK FOOTER //\n// ./src/chrome/event-page.js"],"sourceRoot":""}